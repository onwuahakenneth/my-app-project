{"ast":null,"code":"import _slicedToArray from\"C:/Users/KENZEE101/Desktop/my-app-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import TopBar from\"./components/TopBar\";import MenuOptions from\"./components/MenuOptions\";import PlayButton from\"./components/PlayButton\";import Sound from'react-sound';import myD from'./sounds/4 final mid game.mp3';import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),onSound=_useState2[0],setOnSound=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),displayMenu=_useState4[0],setDisplayMenu=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isPlaying=_useState6[0],setIsPlaying=_useState6[1];// Menu Bar Actions\nvar handleMenuClick=function handleMenuClick(element){setDisplayMenu(!displayMenu);};//Play Actions\nvar play=function play(){if(onSound){setIsPlaying(!isPlaying);}};//Handle Sound ON/OFF\nvar toggleOnSound=function toggleOnSound(resp){setOnSound(resp);if(onSound){setIsPlaying(false);}else if(!onSound&&!isPlaying){setIsPlaying(!isPlaying);}};//Rendering Zone\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TopBar,{onclick:handleMenuClick,displayMenu:displayMenu}),/*#__PURE__*/_jsx(MenuOptions,{displayMenu:displayMenu,toggleOnSound:toggleOnSound,onSound:onSound,play:play}),/*#__PURE__*/_jsx(PlayButton,{play:play,displayMenu:displayMenu}),/*#__PURE__*/_jsx(Sound,{playStatus:isPlaying&&onSound?Sound.status.PLAYING:Sound.status.STOPPED,url:myD,loop:true})]});};export default App;","map":{"version":3,"sources":["C:/Users/KENZEE101/Desktop/my-app-project/src/App.js"],"names":["TopBar","MenuOptions","PlayButton","Sound","myD","useState","App","onSound","setOnSound","displayMenu","setDisplayMenu","isPlaying","setIsPlaying","handleMenuClick","element","play","toggleOnSound","resp","status","PLAYING","STOPPED"],"mappings":"gKAAA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,+BAAhB,CAEA,OAASC,QAAT,KAAyB,OAAzB,C,6IAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAEd,cAA8BD,QAAQ,CAAC,IAAD,CAAtC,wCAAOE,OAAP,eAAgBC,UAAhB,eACA,eAAsCH,QAAQ,CAAC,KAAD,CAA9C,yCAAOI,WAAP,eAAoBC,cAApB,eACA,eAAkCL,QAAQ,CAAC,KAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eAGA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,CAAW,CAC/BJ,cAAc,CAAC,CAACD,WAAF,CAAd,CACH,CAFD,CAKA;AAEA,GAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAI,CACb,GAAGR,OAAH,CAAW,CACPK,YAAY,CAAC,CAACD,SAAF,CAAZ,CACH,CAEJ,CALD,CAQA;AACA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAQ,CAC1BT,UAAU,CAACS,IAAD,CAAV,CAEA,GAAGV,OAAH,CAAW,CACPK,YAAY,CAAC,KAAD,CAAZ,CAEH,CAHD,IAGM,IAAG,CAACL,OAAD,EAAY,CAACI,SAAhB,CAA2B,CAC7BC,YAAY,CAAC,CAACD,SAAF,CAAZ,CACH,CACJ,CATD,CAcA;AAEA,mBACI,wCACI,KAAC,MAAD,EAAQ,OAAO,CAAEE,eAAjB,CAAkC,WAAW,CAAEJ,WAA/C,EADJ,cAEI,KAAC,WAAD,EAAc,WAAW,CAAEA,WAA3B,CAAyC,aAAa,CAAEO,aAAxD,CAAwE,OAAO,CAAET,OAAjF,CAA0F,IAAI,CAAEQ,IAAhG,EAFJ,cAGI,KAAC,UAAD,EAAY,IAAI,CAAEA,IAAlB,CAAwB,WAAW,CAAEN,WAArC,EAHJ,cAII,KAAC,KAAD,EAAO,UAAU,CAAEE,SAAS,EAAIJ,OAAb,CAAuBJ,KAAK,CAACe,MAAN,CAAaC,OAApC,CAA8ChB,KAAK,CAACe,MAAN,CAAaE,OAA9E,CAAwF,GAAG,CAAEhB,GAA7F,CAAkG,IAAI,CAAE,IAAxG,EAJJ,GADJ,CAQH,CAjDD,CAmDA,cAAeE,CAAAA,GAAf","sourcesContent":["import TopBar from \"./components/TopBar\"\r\nimport MenuOptions from \"./components/MenuOptions\";\r\nimport PlayButton from \"./components/PlayButton\";\r\nimport Sound from 'react-sound';\r\nimport myD from './sounds/4 final mid game.mp3';\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst App = () => {\r\n   \r\n    const [onSound, setOnSound] = useState(true);\r\n    const [displayMenu, setDisplayMenu] = useState(false);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n   \r\n    // Menu Bar Actions\r\n\r\n    const handleMenuClick = (element)=>{\r\n        setDisplayMenu(!displayMenu);\r\n    }\r\n\r\n\r\n    //Play Actions\r\n\r\n    const play = ()=>{\r\n        if(onSound){\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    //Handle Sound ON/OFF\r\n    const toggleOnSound = (resp)=>{\r\n        setOnSound(resp)\r\n\r\n        if(onSound){\r\n            setIsPlaying(false)\r\n\r\n        }else if(!onSound && !isPlaying) {\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    //Rendering Zone\r\n\r\n    return (\r\n        <>  \r\n            <TopBar onclick={handleMenuClick} displayMenu={displayMenu}/>\r\n            <MenuOptions  displayMenu={displayMenu}  toggleOnSound={toggleOnSound}  onSound={onSound} play={play}/>\r\n            <PlayButton play={play} displayMenu={displayMenu}/>\r\n            <Sound playStatus={isPlaying && onSound ? Sound.status.PLAYING : Sound.status.STOPPED}  url={myD} loop={true}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}