{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KENZEE101\\\\Desktop\\\\my-app-project\\\\src\\\\components\\\\QuestionInterface.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionInterface = ({\n  gameStarted,\n  timeLeft,\n  checkAnswer,\n  onNextClick,\n  questionArray,\n  currentIndex,\n  passed\n}) => {\n  //determine the color based on the option clicked\n  const defaultColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\n  let bColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\n\n  if (timeLeft > 0 && passed == 'true') {\n    bColor = 'green';\n  }\n\n  if (timeLeft > 0 && passed == 'false') {\n    bColor = 'red';\n  }\n\n  if (timeLeft <= 0) {\n    bColor = 'green';\n  }\n\n  let copy = [...questionArray];\n\n  if (timeLeft == 0 && passed == 'no') {\n    copy[currentIndex].options.sort((a, b) => 0.5 - Math.random());\n  }\n\n  const correctAnswer = copy[currentIndex].answer;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      opacity: `${timeLeft > 0 ? '1' : '0.7'}`\n    },\n    className: `question-container ${gameStarted && timeLeft >= 0 ? 'show-question' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-display\",\n      children: `Q${currentIndex + 1}: ${questionArray[currentIndex].question}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [\"con\", copy[currentIndex].options.map((option, id) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => checkAnswer(option),\n        id: id,\n        style: {\n          background: `${id == copy[currentIndex].options.indexOf(correctAnswer) && time ? bColor : 'yellow'}`,\n          pointerEvents: `${timeLeft <= 0 || passed !== 'no' ? 'none' : 'all'}`\n        },\n        children: option\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `next-button ${timeLeft <= 0 ? 'show-next' : ''}`,\n        onClick: onNextClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Next >>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 105\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n\n_c = QuestionInterface;\nexport default QuestionInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionInterface\");","map":{"version":3,"sources":["C:/Users/KENZEE101/Desktop/my-app-project/src/components/QuestionInterface.jsx"],"names":["QuestionInterface","gameStarted","timeLeft","checkAnswer","onNextClick","questionArray","currentIndex","passed","defaultColor","bColor","copy","options","sort","a","b","Math","random","correctAnswer","answer","opacity","question","map","option","id","background","indexOf","time","pointerEvents"],"mappings":";;;AACA,MAAMA,iBAAiB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA,WAArC;AAAkDC,EAAAA,aAAlD;AAAiEC,EAAAA,YAAjE;AAA+EC,EAAAA;AAA/E,CAAD,KAA4F;AAGlH;AACA,QAAMC,YAAY,GAAG,oFAArB;AACA,MAAIC,MAAM,GAAG,oFAAb;;AACA,MAAGP,QAAQ,GAAG,CAAX,IAAgBK,MAAM,IAAE,MAA3B,EAAkC;AAC9BE,IAAAA,MAAM,GAAG,OAAT;AACH;;AACD,MAAGP,QAAQ,GAAG,CAAX,IAAgBK,MAAM,IAAE,OAA3B,EAAmC;AAC/BE,IAAAA,MAAM,GAAG,KAAT;AACH;;AACD,MAAGP,QAAQ,IAAG,CAAd,EAAiB;AACbO,IAAAA,MAAM,GAAG,OAAT;AACH;;AAED,MAAIC,IAAI,GAAG,CAAC,GAAGL,aAAJ,CAAX;;AACA,MAAGH,QAAQ,IAAI,CAAZ,IAAiBK,MAAM,IAAE,IAA5B,EAAiC;AAC7BG,IAAAA,IAAI,CAACJ,YAAD,CAAJ,CAAmBK,OAAnB,CAA2BC,IAA3B,CAAgC,CAACC,CAAD,EAAIC,CAAJ,KAAS,MAAMC,IAAI,CAACC,MAAL,EAA/C;AACH;;AAED,QAAMC,aAAa,GAAGP,IAAI,CAACJ,YAAD,CAAJ,CAAmBY,MAAzC;AAIA,sBAGQ;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAG,GAAEjB,QAAQ,GAAG,CAAX,GAAe,GAAf,GAAqB,KAAO;AAAzC,KAAZ;AAAyD,IAAA,SAAS,EAAG,sBAAqBD,WAAW,IAAKC,QAAQ,IAAI,CAA5B,GAAiC,eAAjC,GAAmD,EAAG,EAAhJ;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACM,IAAGI,YAAY,GAAC,CAAE,KAAID,aAAa,CAACC,YAAD,CAAb,CAA4Bc,QAAS;AADjE;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,wBAEKV,IAAI,CAACJ,YAAD,CAAJ,CAAmBK,OAAnB,CAA2BU,GAA3B,CAA+B,CAACC,MAAD,EAASC,EAAT,kBAE5B;AAAY,QAAA,OAAO,EAAE,MAAIpB,WAAW,CAACmB,MAAD,CAApC;AAA8C,QAAA,EAAE,EAAEC,EAAlD;AAAsD,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAG,GAAED,EAAE,IAAIb,IAAI,CAACJ,YAAD,CAAJ,CAAmBK,OAAnB,CAA2Bc,OAA3B,CAAmCR,aAAnC,CAAN,IAA2DS,IAA3D,GAAiEjB,MAAjE,GAA0E,QAAU,EAApG;AAAuGkB,UAAAA,aAAa,EAAG,GAAEzB,QAAQ,IAAI,CAAZ,IAAkBK,MAAM,KAAK,IAA7B,GAAoC,MAApC,GAA6C,KAAM;AAA5K,SAA7D;AAAA,kBAEKe;AAFL,SAAQC,EAAR;AAAA;AAAA;AAAA;AAAA,cAFH,CAFL,eAWI;AAAK,QAAA,SAAS,EAAG,eAAcrB,QAAQ,IAAI,CAAZ,GAAgB,WAAhB,GAA6B,EAAI,EAAhE;AAAkE,QAAA,OAAO,EAAEE,WAA3E;AAAA,+BAAwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAwBH,CAjDD;;KAAMJ,iB;AAmDN,eAAeA,iBAAf","sourcesContent":["\r\nconst QuestionInterface = ({gameStarted, timeLeft, checkAnswer, onNextClick, questionArray, currentIndex, passed}) => {\r\n    \r\n\r\n    //determine the color based on the option clicked\r\n    const defaultColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\r\n    let bColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\r\n    if(timeLeft > 0 && passed=='true'){\r\n        bColor = 'green';\r\n    }\r\n    if(timeLeft > 0 && passed=='false'){\r\n        bColor = 'red';\r\n    }\r\n    if(timeLeft <=0 ){\r\n        bColor = 'green';\r\n    }\r\n\r\n    let copy = [...questionArray]\r\n    if(timeLeft == 0 && passed=='no'){\r\n        copy[currentIndex].options.sort((a, b)=> 0.5 - Math.random());\r\n    }\r\n\r\n    const correctAnswer = copy[currentIndex].answer;\r\n\r\n\r\n\r\n    return (\r\n        \r\n\r\n            <div style={{opacity: `${timeLeft > 0 ? '1' : '0.7' }`}} className={`question-container ${gameStarted && (timeLeft >= 0) ? 'show-question' : ''}`}>\r\n            <div className='question-display'>\r\n                {`Q${currentIndex+1}: ${questionArray[currentIndex].question}`}\r\n            </div>\r\n            <div className='answers'>\r\n                con\r\n                {copy[currentIndex].options.map((option, id)=>(\r\n                    \r\n                    <p key={id} onClick={()=>checkAnswer(option)} id={id} style={{background: `${id == copy[currentIndex].options.indexOf(correctAnswer) && time? bColor : 'yellow' }`, pointerEvents: `${timeLeft <= 0 || (passed !== 'no')? 'none' : 'all'}`}}>\r\n\r\n                        {option}\r\n\r\n                    </p>\r\n                ))}\r\n\r\n                <div className={`next-button ${timeLeft <= 0 ? 'show-next': '' }`}onClick={onNextClick}><span> Next &gt;&gt;</span ></div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionInterface\r\n"]},"metadata":{},"sourceType":"module"}