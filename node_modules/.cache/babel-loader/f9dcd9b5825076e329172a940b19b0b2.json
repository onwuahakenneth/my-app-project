{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KENZEE101\\\\Desktop\\\\my-app-project\\\\src\\\\components\\\\QuestionInterface.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionInterface = ({\n  gameStarted,\n  timeLeft,\n  checkAnswer,\n  onNextClick,\n  questionArray,\n  currentIndex,\n  passed,\n  attemps\n}) => {\n  //determine the color based on the option clicked\n  const defaultColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\n  let bColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\n\n  if (timeLeft > 0 && passed === 'true') {\n    bColor = 'green';\n  }\n\n  if (timeLeft > 0 && passed === 'false') {\n    bColor = 'red';\n  }\n\n  if (timeLeft <= 0) {\n    bColor = 'green';\n  }\n\n  let copy = [...questionArray];\n  const correctAnswer = copy[currentIndex].answer;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      opacity: `${timeLeft > 0 ? '1' : '0.7'}`\n    },\n    className: `question-container ${gameStarted && timeLeft >= 0 ? 'show-question' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-display\",\n      children: `Q${currentIndex + 1}: ${questionArray[currentIndex].question}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [copy[currentIndex].options.map((option, id) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setTimeout(checkAnswer(option), 100),\n        id: id,\n        style: {\n          background: `${id === copy[currentIndex].options.indexOf(correctAnswer) && timeLeft <= 0 ? bColor : defaultColor}`,\n          pointerEvents: `${timeLeft <= 0 || passed !== 'faal' ? 'none' : 'all'}`\n        },\n        children: option\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `next-button ${timeLeft <= 0 ? 'show-next' : ''}`,\n        onClick: onNextClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            pointerEvents: `${attemps > 0 ? 'all' : 'none'}`\n          },\n          children: [`${attemps > 0 ? 'Next >>' : 'Game Over !!'}`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 105\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_c = QuestionInterface;\nexport default QuestionInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionInterface\");","map":{"version":3,"sources":["C:/Users/KENZEE101/Desktop/my-app-project/src/components/QuestionInterface.jsx"],"names":["QuestionInterface","gameStarted","timeLeft","checkAnswer","onNextClick","questionArray","currentIndex","passed","attemps","defaultColor","bColor","copy","correctAnswer","answer","opacity","question","options","map","option","id","setTimeout","background","indexOf","pointerEvents"],"mappings":";;;AACA,MAAMA,iBAAiB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA,WAArC;AAAkDC,EAAAA,aAAlD;AAAiEC,EAAAA,YAAjE;AAA+EC,EAAAA,MAA/E;AAAuFC,EAAAA;AAAvF,CAAD,KAAqG;AAG3H;AACA,QAAMC,YAAY,GAAG,oFAArB;AACA,MAAIC,MAAM,GAAG,oFAAb;;AACA,MAAGR,QAAQ,GAAG,CAAX,IAAgBK,MAAM,KAAG,MAA5B,EAAmC;AAC/BG,IAAAA,MAAM,GAAG,OAAT;AACH;;AACD,MAAGR,QAAQ,GAAG,CAAX,IAAgBK,MAAM,KAAG,OAA5B,EAAoC;AAChCG,IAAAA,MAAM,GAAG,KAAT;AACH;;AACD,MAAGR,QAAQ,IAAG,CAAd,EAAiB;AACbQ,IAAAA,MAAM,GAAG,OAAT;AACH;;AAED,MAAIC,IAAI,GAAG,CAAC,GAAGN,aAAJ,CAAX;AAGA,QAAMO,aAAa,GAAGD,IAAI,CAACL,YAAD,CAAJ,CAAmBO,MAAzC;AAIA,sBAGQ;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAG,GAAEZ,QAAQ,GAAG,CAAX,GAAe,GAAf,GAAqB,KAAO;AAAzC,KAAZ;AAAyD,IAAA,SAAS,EAAG,sBAAqBD,WAAW,IAAKC,QAAQ,IAAI,CAA5B,GAAiC,eAAjC,GAAmD,EAAG,EAAhJ;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACM,IAAGI,YAAY,GAAC,CAAE,KAAID,aAAa,CAACC,YAAD,CAAb,CAA4BS,QAAS;AADjE;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBAEKJ,IAAI,CAACL,YAAD,CAAJ,CAAmBU,OAAnB,CAA2BC,GAA3B,CAA+B,CAACC,MAAD,EAASC,EAAT,kBAE5B;AAAY,QAAA,OAAO,EAAE,MAAIC,UAAU,CAACjB,WAAW,CAACe,MAAD,CAAZ,EAAsB,GAAtB,CAAnC;AAA+D,QAAA,EAAE,EAAEC,EAAnE;AAAuE,QAAA,KAAK,EAAE;AAACE,UAAAA,UAAU,EAAG,GAAEF,EAAE,KAAKR,IAAI,CAACL,YAAD,CAAJ,CAAmBU,OAAnB,CAA2BM,OAA3B,CAAmCV,aAAnC,CAAP,IAA4DV,QAAQ,IAAI,CAAxE,GAA2EQ,MAA3E,GAAoFD,YAAc,EAAlH;AAAqHc,UAAAA,aAAa,EAAG,GAAErB,QAAQ,IAAI,CAAZ,IAAkBK,MAAM,KAAK,MAA7B,GAAsC,MAAtC,GAA+C,KAAM;AAA5L,SAA9E;AAAA,kBAEKW;AAFL,SAAQC,EAAR;AAAA;AAAA;AAAA;AAAA,cAFH,CAFL,eAWI;AAAK,QAAA,SAAS,EAAG,eAAcjB,QAAQ,IAAI,CAAZ,GAAgB,WAAhB,GAA6B,EAAI,EAAhE;AAAkE,QAAA,OAAO,EAAEE,WAA3E;AAAA,+BAAwF;AAAM,UAAA,KAAK,EAAE;AAACmB,YAAAA,aAAa,EAAG,GAAEf,OAAO,GAAG,CAAV,GAAc,KAAd,GAAsB,MAAO;AAAhD,WAAb;AAAA,qBAAmE,GAAEA,OAAO,GAAG,CAAV,GAAc,SAAd,GAA0B,cAAe,EAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAwBH,CA/CD;;KAAMR,iB;AAiDN,eAAeA,iBAAf","sourcesContent":["\r\nconst QuestionInterface = ({gameStarted, timeLeft, checkAnswer, onNextClick, questionArray, currentIndex, passed, attemps}) => {\r\n    \r\n\r\n    //determine the color based on the option clicked\r\n    const defaultColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\r\n    let bColor = 'linear-gradient(285deg, rgba(214, 213, 213, 0.38)50%, rgba(98, 124, 177, 0.58)50%)';\r\n    if(timeLeft > 0 && passed==='true'){\r\n        bColor = 'green';\r\n    }\r\n    if(timeLeft > 0 && passed==='false'){\r\n        bColor = 'red';\r\n    }\r\n    if(timeLeft <=0 ){\r\n        bColor = 'green';\r\n    }\r\n\r\n    let copy = [...questionArray]\r\n  \r\n\r\n    const correctAnswer = copy[currentIndex].answer;\r\n\r\n\r\n\r\n    return (\r\n        \r\n\r\n            <div style={{opacity: `${timeLeft > 0 ? '1' : '0.7' }`}} className={`question-container ${gameStarted && (timeLeft >= 0) ? 'show-question' : ''}`}>\r\n            <div className='question-display'>\r\n                {`Q${currentIndex+1}: ${questionArray[currentIndex].question}`}\r\n            </div>\r\n            <div className='answers'>\r\n                \r\n                {copy[currentIndex].options.map((option, id)=>(\r\n                    \r\n                    <p key={id} onClick={()=>setTimeout(checkAnswer(option), 100)} id={id} style={{background: `${id === copy[currentIndex].options.indexOf(correctAnswer) && timeLeft <= 0? bColor : defaultColor }`, pointerEvents: `${timeLeft <= 0 || (passed !== 'faal')? 'none' : 'all'}`}}>\r\n\r\n                        {option}\r\n\r\n                    </p>\r\n                ))}\r\n\r\n                <div className={`next-button ${timeLeft <= 0 ? 'show-next': '' }`}onClick={onNextClick}><span style={{pointerEvents: `${attemps > 0 ? 'all' : 'none'}`}}>{`${attemps > 0 ? 'Next >>' : 'Game Over !!'}`} </span ></div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionInterface\r\n"]},"metadata":{},"sourceType":"module"}