{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KENZEE101\\\\Desktop\\\\my-app-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport TopBar from \"./components/TopBar\";\nimport MenuOptions from \"./components/MenuOptions\";\nimport PlayButton from \"./components/PlayButton\";\nimport Sound from 'react-sound';\nimport myD from './sounds/4 final mid game.mp3';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [onSound, setOnSound] = useState(true);\n  const [gameCat, setGameCat] = useState('books');\n  const [gameLevel, setGameLevel] = useState('eazy');\n  const [displayMenu, setDisplayMenu] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false); // Menu Bar Actions\n\n  const handleMenuClick = () => {\n    setDisplayMenu(!displayMenu);\n  }; // Update Category Chosen by the user\n\n\n  const updateCategory = chosenCat => {\n    setGameCat(chosenCat);\n  }; //Update Game Level set by the user\n\n\n  const updateLevel = level => {\n    setGameLevel(level);\n  }; //Play Actions\n\n\n  const play = () => {\n    if (onSound) {\n      setIsPlaying(!isPlaying);\n    }\n  }; //Handle Sound ON/OFF\n\n\n  const toggleOnSound = resp => {\n    setOnSound(resp);\n\n    if (onSound) {\n      setIsPlaying(false);\n    } else if (!onSound && !isPlaying) {\n      setIsPlaying(!isPlaying);\n    }\n  }; //Update Game Preferences\n\n\n  useEffect(() => {\n    console.log('Mounted');\n  }, [gameCat]);\n  console.log('out'); //Rendering Zone\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      onclick: handleMenuClick,\n      displayMenu: displayMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuOptions, {\n      displayMenu: displayMenu,\n      toggleOnSound: toggleOnSound,\n      onSound: onSound,\n      play: play,\n      updateCategory: updateCategory,\n      updateLevel: updateLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n      play: play,\n      displayMenu: displayMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sound, {\n      playStatus: isPlaying && onSound ? Sound.status.PLAYING : Sound.status.STOPPED,\n      url: myD,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"DsQQHljnhB1J6DAMfz+RUCZtJAA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/KENZEE101/Desktop/my-app-project/src/App.js"],"names":["TopBar","MenuOptions","PlayButton","Sound","myD","useState","useEffect","App","onSound","setOnSound","gameCat","setGameCat","gameLevel","setGameLevel","displayMenu","setDisplayMenu","isPlaying","setIsPlaying","handleMenuClick","updateCategory","chosenCat","updateLevel","level","play","toggleOnSound","resp","console","log","status","PLAYING","STOPPED"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,MAAD,CAA1C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CANc,CAYd;;AAEA,QAAMa,eAAe,GAAG,MAAI;AACxBH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GAFD,CAdc,CAmBd;;;AAEA,QAAMK,cAAc,GAAIC,SAAD,IAAa;AAChCT,IAAAA,UAAU,CAACS,SAAD,CAAV;AACH,GAFD,CArBc,CAyBd;;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAS;AACzBT,IAAAA,YAAY,CAACS,KAAD,CAAZ;AACH,GAFD,CA3Bc,CAgCd;;;AAEA,QAAMC,IAAI,GAAG,MAAI;AACb,QAAGf,OAAH,EAAW;AACPS,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;AAEJ,GALD,CAlCc,CA0Cd;;;AACA,QAAMQ,aAAa,GAAIC,IAAD,IAAQ;AAC1BhB,IAAAA,UAAU,CAACgB,IAAD,CAAV;;AAEA,QAAGjB,OAAH,EAAW;AACPS,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,KAHD,MAGM,IAAG,CAACT,OAAD,IAAY,CAACQ,SAAhB,EAA2B;AAC7BC,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;AACJ,GATD,CA3Cc,CAsDd;;;AAEAV,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAFQ,EAEN,CAACjB,OAAD,CAFM,CAAT;AAIAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EA5Dc,CA8Dd;;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,eAAjB;AAAkC,MAAA,WAAW,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAc,MAAA,WAAW,EAAEA,WAA3B;AAAyC,MAAA,aAAa,EAAEU,aAAxD;AAAwE,MAAA,OAAO,EAAEhB,OAAjF;AAA0F,MAAA,IAAI,EAAEe,IAAhG;AAAsG,MAAA,cAAc,EAAEJ,cAAtH;AAAsI,MAAA,WAAW,EAAEE;AAAnJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEE,IAAlB;AAAwB,MAAA,WAAW,EAAET;AAArC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEE,SAAS,IAAIR,OAAb,GAAuBL,KAAK,CAACyB,MAAN,CAAaC,OAApC,GAA8C1B,KAAK,CAACyB,MAAN,CAAaE,OAA9E;AAAwF,MAAA,GAAG,EAAE1B,GAA7F;AAAkG,MAAA,IAAI,EAAE;AAAxG;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AASH,CAzED;;GAAMG,G;;KAAAA,G;AA2EN,eAAeA,GAAf","sourcesContent":["import TopBar from \"./components/TopBar\"\r\nimport MenuOptions from \"./components/MenuOptions\";\r\nimport PlayButton from \"./components/PlayButton\";\r\nimport Sound from 'react-sound';\r\nimport myD from './sounds/4 final mid game.mp3';\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n   \r\n    const [onSound, setOnSound] = useState(true);\r\n    const [gameCat, setGameCat] = useState('books');\r\n    const [gameLevel, setGameLevel] = useState('eazy');\r\n    const [displayMenu, setDisplayMenu] = useState(false);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n\r\n   \r\n\r\n\r\n    // Menu Bar Actions\r\n\r\n    const handleMenuClick = ()=>{\r\n        setDisplayMenu(!displayMenu);\r\n    }\r\n\r\n\r\n    // Update Category Chosen by the user\r\n\r\n    const updateCategory = (chosenCat)=>{\r\n        setGameCat(chosenCat)\r\n    }\r\n\r\n    //Update Game Level set by the user\r\n\r\n    const updateLevel = (level)=>{\r\n        setGameLevel(level)\r\n    }\r\n\r\n\r\n    //Play Actions\r\n\r\n    const play = ()=>{\r\n        if(onSound){\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    //Handle Sound ON/OFF\r\n    const toggleOnSound = (resp)=>{\r\n        setOnSound(resp)\r\n\r\n        if(onSound){\r\n            setIsPlaying(false)\r\n\r\n        }else if(!onSound && !isPlaying) {\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n    \r\n    //Update Game Preferences\r\n\r\n    useEffect(()=>{\r\n        console.log('Mounted')\r\n    }, [gameCat])\r\n    \r\n    console.log('out')\r\n\r\n    //Rendering Zone\r\n\r\n    return (\r\n        <>  \r\n            <TopBar onclick={handleMenuClick} displayMenu={displayMenu}/>\r\n            <MenuOptions  displayMenu={displayMenu}  toggleOnSound={toggleOnSound}  onSound={onSound} play={play} updateCategory={updateCategory} updateLevel={updateLevel}/>\r\n            <PlayButton play={play} displayMenu={displayMenu}/>\r\n            <Sound playStatus={isPlaying && onSound ? Sound.status.PLAYING : Sound.status.STOPPED}  url={myD} loop={true}/>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}