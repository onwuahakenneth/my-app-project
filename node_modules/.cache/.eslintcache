[{"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\index.js":"1","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\App.js":"2","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Header.jsx":"3","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Menu.jsx":"4","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\TopBar.jsx":"5","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\MenuOptions.jsx":"6","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\PlayButton.jsx":"7","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\playIcon.jsx":"8","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\PlayIcon.jsx":"9","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\GamePlayInfo.jsx":"10","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\EndButton.jsx":"11","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\QuestionInterface.jsx":"12","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Footer.jsx":"13","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Question.jsx":"14","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\NextButton.jsx":"15"},{"size":184,"mtime":1632488713341,"results":"16","hashOfConfig":"17"},{"size":8261,"mtime":1634804791599,"results":"18","hashOfConfig":"17"},{"size":179,"mtime":1632489122573,"results":"19","hashOfConfig":"17"},{"size":556,"mtime":1632694166948,"results":"20","hashOfConfig":"17"},{"size":338,"mtime":1632694095443,"results":"21","hashOfConfig":"17"},{"size":1749,"mtime":1633349480300,"results":"22","hashOfConfig":"17"},{"size":384,"mtime":1632696901255,"results":"23","hashOfConfig":"17"},{"size":133,"mtime":1632656833161,"results":"24","hashOfConfig":"17"},{"size":133,"mtime":1632656833161,"results":"25","hashOfConfig":"17"},{"size":664,"mtime":1633379335295,"results":"26","hashOfConfig":"17"},{"size":244,"mtime":1632697147372,"results":"27","hashOfConfig":"17"},{"size":962,"mtime":1634804720404,"results":"28","hashOfConfig":"17"},{"size":191,"mtime":1632835160149,"results":"29","hashOfConfig":"17"},{"size":325,"mtime":1634804883165,"results":"30","hashOfConfig":"17"},{"size":230,"mtime":1633376474396,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1soux5c",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\index.js",[],["64","65"],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\App.js",["66","67","68","69","70","71","72","73","74","75"],"import TopBar from \"./components/TopBar\"\r\nimport MenuOptions from \"./components/MenuOptions\";\r\nimport PlayButton from \"./components/PlayButton\";\r\nimport GamePlayInfo from \"./components/GamePlayInfo\";\r\nimport EndButton from \"./components/EndButton\";\r\nimport QuestionInterface from \"./components/QuestionInterface\";\r\nimport Footer from \"./components/Footer\";\r\nimport Sound from 'react-sound';\r\nimport startSound from './sounds/start game.mp3';\r\nimport midSound from './sounds/final mid game.mp3';\r\nimport failSound from './sounds/fail short.wav';\r\nimport passedSound from './sounds/click sound.wav';\r\nimport overSound from './sounds/game over.mp3';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n    let p;\r\n    const settingsFromBackUp = window.localStorage.getItem('settings');\r\n    const settingData = JSON.parse(settingsFromBackUp);\r\n   \r\n    const [onSound, setOnSound] = useState(settingsFromBackUp ? settingData.onSound : true);\r\n    const [gameCat, setGameCat] = useState(settingsFromBackUp ? settingData.gameCat : 'generalknowledge');\r\n    const [gameLevel, setGameLevel] = useState(settingsFromBackUp ? settingData.gameLevel : 'easy');\r\n    const [displayMenu, setDisplayMenu] = useState(false);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [questionArray, setQuestionArray] = useState([{}]);\r\n    const [gameTime, setGameTime] = useState(10);\r\n    const [timeLeft, setTimeLeft] = useState(gameTime);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [passed, setPassed] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [attempsLeft, setAttemptsLeft] = useState(15);\r\n    \r\n    \r\n    // Menu Bar Actions\r\n    const handleMenuClick = ()=>{\r\n        setDisplayMenu(!displayMenu);\r\n    }\r\n    \r\n    // Update Category Chosen by the user\r\n    const updateCategory = (chosenCat)=>{\r\n        setGameCat(chosenCat);\r\n    }\r\n    \r\n    //Update Game Level set by the user\r\n    const updateLevel = (level)=>{\r\n        setGameLevel(level);\r\n    }\r\n    \r\n\r\n    \r\n    //Handle Sound ON/OFF\r\n    const toggleOnSound = (resp)=>{\r\n        setOnSound(resp);\r\n    }\r\n    \r\n    const startTmer = ()=>{\r\n       p =  setInterval(()=>{\r\n            setTimeLeft(timeLeft => {\r\n                if(timeLeft > 0 && passed=='undefined'){\r\n                    return timeLeft - 1\r\n                }else{\r\n\r\n                    clearInterval(p)\r\n                    return 0\r\n                }\r\n            })\r\n        }, 1000)\r\n\r\n        if(timeLeft <= 0){\r\n            clearInterval(p)\r\n        }\r\n    }\r\n\r\n    const stopTimer = ()=>{\r\n        clearInterval(p)\r\n    }\r\n    \r\n    \r\n    \r\n    const play = ()=>{\r\n        let currentQuestion = JSON.parse(window.localStorage.getItem(`${gameCat}-${gameLevel}`)).sort((a, b)=>0.5 - Math.random());\r\n        for(let q of currentQuestion){\r\n            q.options.sort((a,b)=>0.5 - Math.random())\r\n        }\r\n        setPassed('undefined')\r\n        setCurrentIndex(0)\r\n        setQuestionArray(currentQuestion)\r\n        setTimeLeft(gameTime)\r\n        startTmer()\r\n        \r\n        setGameStarted(!gameStarted)\r\n\r\n    }\r\n\r\n    // Check answer\r\n\r\n    const handleCheck = (id, target)=>{\r\n        if(questionArray[currentIndex].answer.id === id){\r\n            setPassed(true)\r\n            target.style.background = 'green';\r\n            clearInterval(p)\r\n            stopTimer()\r\n            setTimeout(handleNext, 500)\r\n        }else{\r\n            target.style.background = 'darkred'\r\n            setPassed(false)\r\n\r\n        }\r\n    }\r\n    \r\n    \r\n    //Handle Next Button Click\r\n    const handleNext = ()=>{\r\n        setPassed('undefined')\r\n        if(currentIndex+1 < questionArray.length){\r\n            setTimeLeft(gameTime)\r\n            setCurrentIndex(currentIndex + 1)\r\n        }\r\n        startTmer()\r\n    }\r\n\r\n    // Handle End Button Click\r\n    const onEndClick = ()=>{\r\n        stopTimer()\r\n        setGameStarted(!gameStarted)\r\n    }\r\n    \r\n    \r\n    useEffect(()=>{\r\n        //Backup user's settings\r\n        const settings = { gameCat, gameLevel,onSound };\r\n        const userSettings = JSON.stringify(settings);\r\n        window.localStorage.setItem('settings', userSettings);\r\n\r\n        //fetch the question\r\n        const questFromLocal = JSON.parse(window.localStorage.getItem(`${gameCat}-${gameLevel}`));\r\n\r\n        if(!questFromLocal){\r\n            \r\n            let catId = 9;\r\n            switch(gameCat){\r\n                case 'books':\r\n                    catId = 10;\r\n                    break;\r\n    \r\n                case 'geography':\r\n                    catId= 22;\r\n                    break;\r\n    \r\n                case 'videogames':\r\n                    catId = 15;\r\n                    break;\r\n    \r\n                case 'generalknowledge':\r\n                    catId = 9;\r\n                    break;\r\n                \r\n                default:\r\n                    catId = 9;\r\n            }\r\n\r\n            fetch(`https://opentdb.com/api.php?amount=50&category=${catId}&difficulty=${gameLevel}&type=multiple`)\r\n            .then((response)=>{\r\n                return response.json();\r\n            })\r\n            .then((data)=>{\r\n                return data.results;\r\n            })\r\n            .then(questions=>{\r\n                \r\n                const modifiedQuestions = [];\r\n                for(let q of questions){\r\n\r\n                let {question, incorrect_answers, correct_answer } = q;\r\n\r\n                let options = [];\r\n                for(let text of incorrect_answers){\r\n                    let id = Math.floor(Math.random()*Date.now());\r\n\r\n                    let obj = {text: text, id}\r\n                    options.push(obj)\r\n                }\r\n                let id = Math.floor(Math.random()*Date.now());\r\n                let answer = {text: correct_answer, id};\r\n                let pos = Math.floor(Math.random()*options.length)\r\n                options.splice(pos, 0, answer);\r\n               \r\n    \r\n                for(let i = options.length-1; i > 0; i--){\r\n                     const p = Math.floor(Math.random()*i);\r\n                    [options[p], options[i]] = [options[i], options[p]];\r\n                }\r\n                \r\n                modifiedQuestions.push({question, options, answer});\r\n            }\r\n            window.localStorage.setItem(`${gameCat}-${gameLevel}`, JSON.stringify(modifiedQuestions));\r\n            // setQuestionArray(modifiedQuestions)\r\n                \r\n            }).catch(err=>{\r\n                alert(`Oops..unable to fetch question from the API\\nPlease check your network connection and refresh the page...\\nYou may select a different category from the MENU options`)\r\n            })\r\n        }\r\n        \r\n        // }else{\r\n        //     setQuestionArray(questFromLocal.sort((a, b)=> 0.5 -Math.random()));\r\n        // }\r\n        \r\n        \r\n        // Simulate A CountDown Timer\r\n        if(timeLeft > 0 && gameStarted){\r\n                setTimeout(()=>setTimeLeft(timeLeft-1), 1000);\r\n                if(timeLeft === 0){\r\n                    setTimeLeft(0)\r\n                }\r\n        }\r\n       \r\n    }, [gameCat, gameLevel, onSound, gameStarted, timeLeft])\r\n    \r\n    \r\n    \r\n    //Rendering Zone\r\n    return (\r\n        <>  \r\n            <TopBar onclick={handleMenuClick} displayMenu={displayMenu} gameStarted={gameStarted}/>\r\n\r\n            <MenuOptions  displayMenu={displayMenu}  toggleOnSound={toggleOnSound}  onSound={onSound} play={play} updateCategory={updateCategory} updateLevel={updateLevel} gameLevel={gameLevel}gameCat={gameCat} />\r\n\r\n            <PlayButton play={play} displayMenu={displayMenu} gameStarted={gameStarted}/>\r\n\r\n            <GamePlayInfo gameTime={gameTime} gameStarted={gameStarted} timeLeft={timeLeft}/>\r\n\r\n            <Sound playStatus={onSound && gameStarted ? Sound.status.PLAYING : Sound.status.STOPPED}  url={startSound} loop={true} volume={30} autoLoad={true}/>\r\n           \r\n           <EndButton gameStarted={gameStarted} handleClick={onEndClick}/>\r\n\r\n           <QuestionInterface passed={passed} timeLeft={timeLeft} handleCheck={handleCheck}  gameStarted={gameStarted} questionArray={questionArray[currentIndex]} handleNext={handleNext}/>\r\n           <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Header.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Menu.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\TopBar.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\MenuOptions.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\PlayButton.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\playIcon.jsx",["76","77"],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\PlayIcon.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\GamePlayInfo.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\EndButton.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\QuestionInterface.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Footer.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\Question.jsx",[],"C:\\Users\\KENZEE101\\Desktop\\my-app-project\\src\\components\\NextButton.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":17},{"ruleId":"82","severity":1,"message":"87","line":12,"column":8,"nodeType":"84","messageId":"85","endLine":12,"endColumn":19},{"ruleId":"82","severity":1,"message":"88","line":13,"column":8,"nodeType":"84","messageId":"85","endLine":13,"endColumn":17},{"ruleId":"82","severity":1,"message":"89","line":27,"column":22,"nodeType":"84","messageId":"85","endLine":27,"endColumn":33},{"ruleId":"82","severity":1,"message":"90","line":31,"column":12,"nodeType":"84","messageId":"85","endLine":31,"endColumn":17},{"ruleId":"82","severity":1,"message":"91","line":31,"column":19,"nodeType":"84","messageId":"85","endLine":31,"endColumn":27},{"ruleId":"82","severity":1,"message":"92","line":32,"column":12,"nodeType":"84","messageId":"85","endLine":32,"endColumn":23},{"ruleId":"82","severity":1,"message":"93","line":32,"column":25,"nodeType":"84","messageId":"85","endLine":32,"endColumn":40},{"ruleId":"94","severity":1,"message":"95","line":60,"column":42,"nodeType":"96","messageId":"97","endLine":60,"endColumn":44},{"ruleId":"82","severity":1,"message":"98","line":2,"column":7,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"99","severity":2,"message":"100","line":10,"column":16,"nodeType":"84","messageId":"101","endLine":10,"endColumn":28},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'midSound' is defined but never used.","Identifier","unusedVar","'failSound' is defined but never used.","'passedSound' is defined but never used.","'overSound' is defined but never used.","'setGameTime' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'attempsLeft' is assigned a value but never used.","'setAttemptsLeft' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'playcon' is assigned a value but never used.","no-undef","'ContinueIcon' is not defined.","undef","no-global-assign","no-unsafe-negation"]